{"version":3,"sources":["utils/index.js","containers/Record.js","components/Container.js","components/TemplateList.js","utils/indexDB.js","containers/Main.js","index.js"],"names":["data","a","JSZipUtils","getBinaryContent","error","template","createReport","cmdDelimiter","report","saveDataToFile","fileName","mimeType","blob","Blob","type","url","window","URL","createObjectURL","downloadURL","setTimeout","revokeObjectURL","document","createElement","href","download","body","appendChild","style","click","remove","Item","createForm","form","getFieldProps","getFieldError","backgroundColor","rules","required","message","labelNumber","mode","title","initialValue","Date","onClick","validateFields","force","formData","getFieldsValue","detectDate","format","c","position","section","mValue1","mValue2","mValue3","console","log","genReport","Container","children","templates","id","name","enable","withRouter","project","history","map","extra","sessionStorage","setItem","push","handleItemClick","db","initDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","autoIncrement","onsuccess","onerror","insertData","store","transaction","objectStore","add","close","selectAllData","openCursor","cursor","item","key","value","continue","prompt","Brief","ReactDOM","render","path","component","Record","useState","projects","setProjects","useEffect","then","res","accordion","openAnimation","Panel","header","text","onPress","newProjects","getElementById"],"mappings":"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","file":"static/js/main.2d4a861e.chunk.js","sourcesContent":["import createReport from \"docx-templates\";\r\nimport JSZipUtils from \"jszip-utils\";\r\n\r\nexport async function genReport(data) {\r\n  //上传模版\r\n  // const template = await readFileIntoArrayBuffer(file);\r\n  // const report = await createReport({\r\n  //   template,\r\n  //   data: {\r\n  //     name: \"John\",\r\n  //     surname: \"Appleseed\",\r\n  //   },\r\n  //   cmdDelimiter: [\"{\", \"}\"],\r\n  // });\r\n  // saveDataToFile(\r\n  //   report,\r\n  //   \"report.docx\",\r\n  //   \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n  // );\r\n\r\n  JSZipUtils.getBinaryContent(\r\n    \"./templates/F-05.docx\",\r\n    async (error, template) => {\r\n      if (error) throw error;\r\n      const report = await createReport({\r\n        template,\r\n        // data: {\r\n        //   projectName: \"测试项目\",\r\n        //   equipmentName: \"设备\",\r\n        //   detectDate: \"2021-4-15\",\r\n        //   reportNo: \"292831930\",\r\n        //   c: {\r\n        //     position: \"北\",\r\n        //     section: [23, 21, 36],\r\n        //   },\r\n        // },\r\n        data,\r\n        cmdDelimiter: [\"{\", \"}\"],\r\n      });\r\n      // Save report\r\n      saveDataToFile(\r\n        report,\r\n        \"report.docx\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n      );\r\n    }\r\n  );\r\n}\r\n\r\n// ==============================================\r\n// Helpers\r\n// ==============================================\r\nconst readFileIntoArrayBuffer = async (fd) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n    reader.readAsArrayBuffer(fd);\r\n  });\r\n\r\nconst saveDataToFile = (data, fileName, mimeType) => {\r\n  const blob = new Blob([data], { type: mimeType });\r\n  const url = window.URL.createObjectURL(blob);\r\n  downloadURL(url, fileName, mimeType);\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 1000);\r\n};\r\n\r\nconst downloadURL = (data, fileName) => {\r\n  const a = document.createElement(\"a\");\r\n  a.href = data;\r\n  a.download = fileName;\r\n  document.body.appendChild(a);\r\n  a.style = \"display: none\";\r\n  a.click();\r\n  a.remove();\r\n};\r\n","// import logo from \"./logo.svg\";\r\nimport { format } from 'date-fns';\r\nimport { createForm } from 'rc-form';\r\nimport {\r\n  Button,\r\n  InputItem,\r\n  List,\r\n  DatePicker,\r\n  WingBlank,\r\n  WhiteSpace,\r\n} from 'antd-mobile';\r\nimport { genReport } from '../utils/index';\r\n\r\nconst Item = List.Item;\r\n\r\nfunction Record({ form }) {\r\n  //上传模版\r\n  // const fileInput = useRef(null);\r\n  // const handleClick = () => {\r\n  //   const file = fileInput.current.inputRef.inputRef.files[0];\r\n  //   genReport(file);\r\n  // };\r\n  const handleClick = () => {\r\n    form.validateFields({ force: true }, (error) => {\r\n      if (!error) {\r\n        // console.log(form.getFieldsValue());\r\n        const formData = form.getFieldsValue();\r\n        formData.detectDate = format(formData.detectDate, 'yyyy-MM-dd');\r\n        const c = {\r\n          position: formData.position,\r\n          section: [formData.mValue1, formData.mValue2, formData.mValue3],\r\n        };\r\n        const data = { ...formData, c };\r\n        console.log(data);\r\n        genReport(data);\r\n      } else {\r\n        // alert('验证失败');\r\n      }\r\n    });\r\n  };\r\n  const { getFieldProps, getFieldError } = form;\r\n  return (\r\n    <WingBlank>\r\n      <WhiteSpace />\r\n      <List style={{ backgroundColor: 'red' }}>\r\n        <InputItem\r\n          error={!!getFieldError('projectName')}\r\n          {...getFieldProps('projectName', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          项目名称\r\n        </InputItem>\r\n        <InputItem\r\n          error={!!getFieldError('equipmentName')}\r\n          labelNumber={7}\r\n          {...getFieldProps('equipmentName', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          检测设备及名称\r\n        </InputItem>\r\n        <DatePicker\r\n          mode=\"date\"\r\n          title=\"选择日期\"\r\n          {...getFieldProps('detectDate', {\r\n            initialValue: new Date(),\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          <Item error={!!getFieldError('detectDate')}>检测时间</Item>\r\n        </DatePicker>\r\n        <InputItem\r\n          error={!!getFieldError('reportNo')}\r\n          type=\"number\"\r\n          {...getFieldProps('reportNo', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          报告编号\r\n        </InputItem>\r\n        <InputItem\r\n          error={!!getFieldError('position')}\r\n          {...getFieldProps('position', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          柱位置\r\n        </InputItem>\r\n        <InputItem\r\n          error={!!getFieldError('mValue1')}\r\n          type=\"number\"\r\n          {...getFieldProps('mValue1', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          实测值1\r\n        </InputItem>\r\n        <InputItem\r\n          error={!!getFieldError('mValue2')}\r\n          type=\"number\"\r\n          {...getFieldProps('mValue2', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          实测值2\r\n        </InputItem>\r\n        <InputItem\r\n          error={!!getFieldError('mValue3')}\r\n          type=\"number\"\r\n          {...getFieldProps('mValue3', {\r\n            rules: [{ required: true, message: '必填' }],\r\n          })}\r\n        >\r\n          实测值3\r\n        </InputItem>\r\n      </List>\r\n      <WhiteSpace />\r\n      <Button type=\"primary\" onClick={handleClick}>\r\n        导出\r\n      </Button>\r\n    </WingBlank>\r\n  );\r\n}\r\n\r\nexport default createForm()(Record);\r\n","import React from 'react';\r\nimport { WingBlank, WhiteSpace } from 'antd-mobile';\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <WingBlank>\r\n      <WhiteSpace />\r\n      {children}\r\n    </WingBlank>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { List, WingBlank } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Item = List.Item;\r\nconst templates = [\r\n  {\r\n    id: 1,\r\n    name: '钢筋混凝土柱检测记录',\r\n    enable: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '钢筋混凝土梁检测记录',\r\n    enable: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '墙钢筋及厚度检测记录',\r\n    enable: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '板钢筋及厚度检测记录',\r\n    enable: false,\r\n  },\r\n];\r\n\r\nfunction TemplateList({ project, history }) {\r\n  const handleItemClick = (template) => {\r\n    if (template.enable) {\r\n      sessionStorage.setItem('curProject', project.name);\r\n      sessionStorage.setItem('curTmeplate', template.name);\r\n      history.push('/record');\r\n    }\r\n  };\r\n  return (\r\n    <WingBlank>\r\n      <List>\r\n        {templates.map((template) => (\r\n          <Item\r\n            extra={template.enable ? '' : '不可用'}\r\n            onClick={() => {\r\n              handleItemClick(template);\r\n            }}\r\n          >\r\n            {template.name}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </WingBlank>\r\n  );\r\n}\r\n\r\nexport default withRouter(TemplateList);\r\n","let db = null;\r\n\r\nconst initDB = async () =>\r\n  await new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open(\"ljjDB\");\r\n    request.onupgradeneeded = function (event) {\r\n      const db = event.target.result;\r\n      if (!db.objectStoreNames.contains(\"projects\")) {\r\n        db.createObjectStore(\"projects\", { autoIncrement: true });\r\n      }\r\n    };\r\n    request.onsuccess = function (event) {\r\n      db = event.target.result;\r\n      resolve(db);\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(\"数据库初始化失败！\");\r\n    };\r\n  });\r\n\r\nexport const insertData = async (store, data) => {\r\n  const db = await initDB();\r\n  return await new Promise((resolve, reject) => {\r\n    const request = db\r\n      .transaction([store], \"readwrite\")\r\n      .objectStore(store)\r\n      .add(data);\r\n    request.onsuccess = function (event) {\r\n      const id = event.target.result;\r\n      resolve(id);\r\n      db.close();\r\n      //   console.log(`${store}数据添加成功！`);\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(`${store}数据添加失败！`);\r\n    };\r\n  });\r\n};\r\n\r\nexport const selectAllData = async (store) => {\r\n  const db = await initDB();\r\n  return await new Promise((resolve, reject) => {\r\n    const data = [];\r\n    const request = db\r\n      .transaction(store, \"readonly\")\r\n      .objectStore(store)\r\n      .openCursor();\r\n    request.onsuccess = function (event) {\r\n      const cursor = event.target.result;\r\n      if (cursor) {\r\n        const item = { id: cursor.key, ...cursor.value };\r\n        data.push(item);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(data);\r\n        db.close();\r\n      }\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(`${store}数据查询失败！`);\r\n    };\r\n  });\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  List,\r\n  WhiteSpace,\r\n  Modal,\r\n  Button,\r\n  NavBar,\r\n  Accordion,\r\n} from 'antd-mobile';\r\nimport Container from '../components/Container';\r\nimport TemplateList from '../components/TemplateList';\r\nimport { insertData, selectAllData } from '../utils/indexDB';\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\nconst prompt = Modal.prompt;\r\n\r\nexport default function Main() {\r\n  // const db = useContext(DBContext);\r\n  const [projects, setProjects] = useState([]);\r\n  useEffect(() => {\r\n    // console.log(\"1123\");\r\n    selectAllData('projects').then((res) => {\r\n      setProjects(res);\r\n    });\r\n  }, []);\r\n  const handleButtonClick = () => {\r\n    prompt(\r\n      '项目名称',\r\n      null,\r\n      [\r\n        {\r\n          text: '取消',\r\n        },\r\n        {\r\n          text: '确定',\r\n          onPress: (value) => {\r\n            if (value) {\r\n              return insertData('projects', { name: value }).then((id) => {\r\n                const newProjects = [...projects, { id, name: value }];\r\n                setProjects(newProjects);\r\n              });\r\n            } else {\r\n              return Promise.reject();\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      'default',\r\n      null,\r\n      ['请输入项目名称']\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar mode=\"dark\">项目列表</NavBar>\r\n      <Container>\r\n        <Accordion accordion openAnimation={{}}>\r\n          {projects.map((project) => (\r\n            <Accordion.Panel key={project.id} header={project.name}>\r\n              <TemplateList project={project} />\r\n            </Accordion.Panel>\r\n          ))}\r\n        </Accordion>\r\n        <WhiteSpace />\r\n        <Button type=\"primary\" onClick={handleButtonClick}>\r\n          创建新项目\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Record from './containers/Record';\r\nimport Main from './containers/Main';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path=\"/record\" component={Record} />\r\n      <Route component={Main} />\r\n    </Switch>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}