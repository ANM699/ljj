{"version":3,"sources":["components/Container.js","utils/indexDB.js","utils/index.js","containers/record/Add.js","containers/record/List.js","components/TemplateList.js","containers/Main.js","index.js","containers/record/Record.js"],"names":["Container","children","db","initDB","a","Promise","resolve","reject","request","window","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","autoIncrement","createIndex","unique","onsuccess","onerror","console","error","insertData","store","data","transaction","objectStore","add","id","close","selectAllData","openCursor","cursor","log","item","primaryKey","value","push","continue","selectDataByIndex","indexName","params","range","IDBKeyRange","only","index","Item","createForm","form","history","project","JSON","parse","sessionStorage","getItem","template","getFieldProps","getFieldError","mode","name","className","title","initialValue","Date","labelNumber","rules","required","message","placeholder","type","onClick","validateFields","force","fail","formData","getFieldsValue","date","format","projectId","templateId","then","replace","templates","enable","withRouter","map","disabled","extra","setItem","stringify","handleItemClick","prompt","ReactDOM","render","path","component","Add","useState","columns","setColumns","useEffect","res","column","location","projects","setProjects","accordion","openAnimation","Panel","header","text","onPress","newProjects","document","getElementById"],"mappings":"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","file":"static/js/main.00542035.chunk.js","sourcesContent":["import React from 'react';\r\nimport { WingBlank, WhiteSpace } from 'antd-mobile';\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <WingBlank>\r\n      <WhiteSpace />\r\n      {children}\r\n    </WingBlank>\r\n  );\r\n}\r\n","let db = null;\r\n\r\nconst initDB = async () =>\r\n  await new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('ljjDB');\r\n    request.onupgradeneeded = function (event) {\r\n      const db = event.target.result;\r\n      let objectStore = null;\r\n      if (!db.objectStoreNames.contains('projects')) {\r\n        //项目表\r\n        db.createObjectStore('projects', { autoIncrement: true });\r\n      }\r\n      if (!db.objectStoreNames.contains('columns')) {\r\n        //柱记录表\r\n        objectStore = db.createObjectStore('columns', { autoIncrement: true });\r\n        objectStore.createIndex('projectId', 'projectId', { unique: false });\r\n      }\r\n    };\r\n    request.onsuccess = function (event) {\r\n      db = event.target.result;\r\n      resolve(db);\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error('数据库初始化失败！');\r\n    };\r\n  });\r\n\r\nexport const insertData = async (store, data) => {\r\n  await initDB();\r\n  return await new Promise((resolve, reject) => {\r\n    const request = db\r\n      .transaction([store], 'readwrite')\r\n      .objectStore(store)\r\n      .add(data);\r\n    request.onsuccess = function (event) {\r\n      const id = event.target.result;\r\n      resolve(id);\r\n      db.close();\r\n      //   console.log(`${store}数据添加成功！`);\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(`${store}数据添加失败！`);\r\n    };\r\n  });\r\n};\r\n//查询所有数据\r\nexport const selectAllData = async (store) => {\r\n  await initDB();\r\n  return await new Promise((resolve, reject) => {\r\n    const data = [];\r\n    const request = db\r\n      .transaction(store, 'readonly')\r\n      .objectStore(store)\r\n      .openCursor();\r\n    request.onsuccess = function (event) {\r\n      const cursor = event.target.result;\r\n      if (cursor) {\r\n        console.log(cursor);\r\n        const item = { id: cursor.primaryKey, ...cursor.value };\r\n        data.push(item);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(data);\r\n        db.close();\r\n      }\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(`${store}数据查询失败！`);\r\n    };\r\n  });\r\n};\r\n//根据索引条件查询数据\r\nexport const selectDataByIndex = async (store, indexName, params) => {\r\n  await initDB();\r\n  return await new Promise((resolve, reject) => {\r\n    const data = [];\r\n    const range = IDBKeyRange.only(params);\r\n    const request = db\r\n      .transaction(store, 'readonly')\r\n      .objectStore(store)\r\n      .index(indexName)\r\n      .openCursor(range);\r\n    request.onsuccess = function (event) {\r\n      const cursor = event.target.result;\r\n      if (cursor) {\r\n        const item = { id: cursor.primaryKey, ...cursor.value };\r\n        data.push(item);\r\n        cursor.continue();\r\n      } else {\r\n        resolve(data);\r\n        db.close();\r\n      }\r\n    };\r\n    request.onerror = function () {\r\n      reject();\r\n      console.error(`${store}数据查询失败！`);\r\n    };\r\n  });\r\n};\r\n","import createReport from \"docx-templates\";\r\nimport JSZipUtils from \"jszip-utils\";\r\n\r\nexport async function genReport(data) {\r\n  //上传模版\r\n  // const template = await readFileIntoArrayBuffer(file);\r\n  // const report = await createReport({\r\n  //   template,\r\n  //   data: {\r\n  //     name: \"John\",\r\n  //     surname: \"Appleseed\",\r\n  //   },\r\n  //   cmdDelimiter: [\"{\", \"}\"],\r\n  // });\r\n  // saveDataToFile(\r\n  //   report,\r\n  //   \"report.docx\",\r\n  //   \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n  // );\r\n\r\n  JSZipUtils.getBinaryContent(\r\n    \"./templates/F-05.docx\",\r\n    async (error, template) => {\r\n      if (error) throw error;\r\n      const report = await createReport({\r\n        template,\r\n        // data: {\r\n        //   projectName: \"测试项目\",\r\n        //   equipmentName: \"设备\",\r\n        //   detectDate: \"2021-4-15\",\r\n        //   reportNo: \"292831930\",\r\n        //   c: {\r\n        //     position: \"北\",\r\n        //     section: [23, 21, 36],\r\n        //   },\r\n        // },\r\n        data,\r\n        cmdDelimiter: [\"{\", \"}\"],\r\n      });\r\n      // Save report\r\n      saveDataToFile(\r\n        report,\r\n        \"report.docx\",\r\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n      );\r\n    }\r\n  );\r\n}\r\n\r\n// ==============================================\r\n// Helpers\r\n// ==============================================\r\nconst readFileIntoArrayBuffer = async (fd) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = () => {\r\n      resolve(reader.result);\r\n    };\r\n    reader.readAsArrayBuffer(fd);\r\n  });\r\n\r\nconst saveDataToFile = (data, fileName, mimeType) => {\r\n  const blob = new Blob([data], { type: mimeType });\r\n  const url = window.URL.createObjectURL(blob);\r\n  downloadURL(url, fileName, mimeType);\r\n  setTimeout(() => {\r\n    window.URL.revokeObjectURL(url);\r\n  }, 1000);\r\n};\r\n\r\nconst downloadURL = (data, fileName) => {\r\n  const a = document.createElement(\"a\");\r\n  a.href = data;\r\n  a.download = fileName;\r\n  document.body.appendChild(a);\r\n  a.style = \"display: none\";\r\n  a.click();\r\n  a.remove();\r\n};\r\n","// import logo from \"./logo.svg\";\r\nimport { format } from 'date-fns';\r\nimport { createForm } from 'rc-form';\r\nimport {\r\n  Button,\r\n  InputItem,\r\n  List,\r\n  DatePicker,\r\n  WhiteSpace,\r\n  NavBar,\r\n  Flex,\r\n  Toast,\r\n} from 'antd-mobile';\r\n\r\nimport Container from '../../components/Container';\r\nimport { insertData } from '../../utils/indexDB';\r\nimport { genReport } from '../../utils/index';\r\n\r\nconst Item = List.Item;\r\n\r\nfunction Add({ form, history }) {\r\n  const project = JSON.parse(sessionStorage.getItem('curProject'));\r\n  const template = JSON.parse(sessionStorage.getItem('curTemplate'));\r\n  const { getFieldProps, getFieldError } = form;\r\n\r\n  const handleClick = () => {\r\n    form.validateFields({ force: true }, (error) => {\r\n      if (!error) {\r\n        const formData = form.getFieldsValue();\r\n        formData.date = format(formData.date, 'yyyy-MM-dd');\r\n        formData.projectId = project.id;\r\n        formData.templateId = template.id;\r\n        insertData('columns', formData).then(() => {\r\n          history.replace('/record/list');\r\n        });\r\n        // const c = {\r\n        //   position: formData.position,\r\n        //   section: [formData.mValue1, formData.mValue2, formData.mValue3],\r\n        // };\r\n        // const data = { ...formData, c };\r\n        // console.log(data);\r\n        // genReport(data);\r\n      } else {\r\n        Toast.fail('必填项未填写！', 2);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar mode=\"dark\">{project.name}</NavBar>\r\n      <div className=\"title\">{template.name}</div>\r\n      <Container>\r\n        <List>\r\n          <DatePicker\r\n            mode=\"date\"\r\n            title=\"选择日期\"\r\n            {...getFieldProps('date', {\r\n              initialValue: new Date(),\r\n            })}\r\n          >\r\n            <Item>检测时间</Item>\r\n          </DatePicker>\r\n          <InputItem\r\n            labelNumber={7}\r\n            error={!!getFieldError('equip')}\r\n            {...getFieldProps('equip', {\r\n              rules: [{ required: true, message: '必填' }],\r\n            })}\r\n          >\r\n            检测设备及名称\r\n          </InputItem>\r\n          <InputItem\r\n            error={!!getFieldError('location')}\r\n            {...getFieldProps('location', {\r\n              rules: [{ required: true, message: '必填' }],\r\n            })}\r\n          >\r\n            柱位置\r\n          </InputItem>\r\n        </List>\r\n        <div className=\"sub-title\">截面尺寸（mm）</div>\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('section_s_m_1')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('section_s_m_2')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('section_s_m_3')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          {/* <Flex.Item>\r\n            <InputItem\r\n              placeholder=\"平均值\"\r\n              {...getFieldProps('section_s_a')}\r\n            ></InputItem>\r\n          </Flex.Item> */}\r\n        </Flex>\r\n        <div className=\"sub-title\">柱纵筋实测分布（mm）</div>\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              placeholder=\"柱纵筋实测分布\"\r\n              {...getFieldProps('bar')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item />\r\n        </Flex>\r\n        <div className=\"sub-title\">加密区箍筋间距（mm）</div>\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_1')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_2')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_3')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n        </Flex>\r\n        <WhiteSpace />\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_4')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_5')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_m_6')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n        </Flex>\r\n        <div className=\"sub-title\">非加密区实测箍筋间距（mm）</div>\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_1')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_2')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_3')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n        </Flex>\r\n        <WhiteSpace />\r\n        <Flex>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_4')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_5')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"实测值\"\r\n              {...getFieldProps('space_non_m_6')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n        </Flex>\r\n        <Flex>\r\n          <Flex.Item>\r\n            <div className=\"sub-title\">设计箍筋间距（mm）</div>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"设计箍筋间距\"\r\n              {...getFieldProps('space_d')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n          <Flex.Item>\r\n            <div className=\"sub-title\">加密区长度（mm）</div>\r\n            <InputItem\r\n              type=\"number\"\r\n              placeholder=\"加密区长度\"\r\n              {...getFieldProps('length')}\r\n            ></InputItem>\r\n          </Flex.Item>\r\n        </Flex>\r\n        <WhiteSpace />\r\n        {/* <Button type=\"primary\" onClick={handleClick}>\r\n        导出\r\n      </Button> */}\r\n        <Button type=\"primary\" onClick={handleClick}>\r\n          保存\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default createForm()(Add);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavBar, List, Button, WhiteSpace } from 'antd-mobile';\r\nimport Container from '../../components/Container';\r\nimport { selectDataByIndex } from '../../utils/indexDB';\r\n\r\nconst Item = List.Item;\r\n\r\nexport default function Rlist({ history }) {\r\n  const project = JSON.parse(sessionStorage.getItem('curProject'));\r\n  const template = JSON.parse(sessionStorage.getItem('curTemplate'));\r\n  const [columns, setColumns] = useState([]);\r\n\r\n  useEffect(() => {\r\n    selectDataByIndex('columns', 'projectId', project.id).then((res) => {\r\n      setColumns(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    history.push('/record/add');\r\n  };\r\n  return (\r\n    <>\r\n      <NavBar mode=\"dark\">{project.name}</NavBar>\r\n      <div className=\"title\">{template.name}</div>\r\n      <Container>\r\n        <List>\r\n          {columns.map((column) => (\r\n            <Item key={column.id} extra={column.date}>\r\n              {column.location}\r\n            </Item>\r\n          ))}\r\n        </List>\r\n        <WhiteSpace />\r\n        <Button type=\"primary\" onClick={handleClick}>\r\n          添加记录\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { List, WingBlank } from 'antd-mobile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Item = List.Item;\r\nconst templates = [\r\n  {\r\n    id: 1,\r\n    name: '钢筋混凝土柱检测记录',\r\n    enable: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '钢筋混凝土梁检测记录',\r\n    enable: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '墙钢筋及厚度检测记录',\r\n    enable: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '板钢筋及厚度检测记录',\r\n    enable: false,\r\n  },\r\n];\r\n\r\nfunction TemplateList({ project, history }) {\r\n  const handleItemClick = (template) => {\r\n    if (template.enable) {\r\n      sessionStorage.setItem('curProject', JSON.stringify(project));\r\n      sessionStorage.setItem('curTemplate', JSON.stringify(template));\r\n      history.push('/record/List');\r\n    }\r\n  };\r\n  return (\r\n    <WingBlank>\r\n      <List>\r\n        {templates.map((template) => (\r\n          <Item\r\n            disabled={!template.enable}\r\n            key={template.id}\r\n            extra={template.enable ? '' : '不可用'}\r\n            onClick={() => {\r\n              handleItemClick(template);\r\n            }}\r\n          >\r\n            {template.name}\r\n          </Item>\r\n        ))}\r\n      </List>\r\n    </WingBlank>\r\n  );\r\n}\r\n\r\nexport default withRouter(TemplateList);\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  List,\r\n  WhiteSpace,\r\n  Modal,\r\n  Button,\r\n  NavBar,\r\n  Accordion,\r\n} from 'antd-mobile';\r\nimport Container from '../components/Container';\r\nimport TemplateList from '../components/TemplateList';\r\nimport { insertData, selectAllData } from '../utils/indexDB';\r\n\r\nconst Item = List.Item;\r\nconst prompt = Modal.prompt;\r\n\r\nexport default function Main() {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    selectAllData('projects').then((res) => {\r\n      setProjects(res);\r\n    });\r\n  }, []);\r\n\r\n  const handleButtonClick = () => {\r\n    prompt(\r\n      '项目名称',\r\n      null,\r\n      [\r\n        {\r\n          text: '取消',\r\n        },\r\n        {\r\n          text: '确定',\r\n          onPress: (value) => {\r\n            if (value) {\r\n              return insertData('projects', { name: value }).then((id) => {\r\n                const newProjects = [...projects, { id, name: value }];\r\n                setProjects(newProjects);\r\n              });\r\n            } else {\r\n              return Promise.reject();\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      'default',\r\n      null,\r\n      ['请输入项目名称']\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar mode=\"dark\">项目列表</NavBar>\r\n      <Container>\r\n        <Accordion accordion openAnimation={{}}>\r\n          {projects.map((project) => (\r\n            <Accordion.Panel\r\n              // style={{ marginBottom: 15 }}\r\n              key={project.id}\r\n              header={project.name}\r\n            >\r\n              <TemplateList project={project} />\r\n            </Accordion.Panel>\r\n          ))}\r\n        </Accordion>\r\n        <WhiteSpace />\r\n        <Button type=\"primary\" onClick={handleButtonClick}>\r\n          创建新项目\r\n        </Button>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Record from './containers/record/Record';\r\nimport Add from './containers/record/Add';\r\nimport List from './containers/record/List';\r\nimport Main from './containers/Main';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path=\"/record/Add\" component={Add} />\r\n      <Route path=\"/record/List\" component={List} />\r\n      <Route path=\"/record\" component={Record} />\r\n      <Route component={Main} />\r\n    </Switch>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n","import React from 'react';\r\n\r\nexport default function Record() {\r\n  return <div>Record</div>;\r\n}\r\n"],"sourceRoot":""}