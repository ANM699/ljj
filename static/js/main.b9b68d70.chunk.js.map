{"version":3,"sources":["utils/index.js","containers/Record.js","component/Container.js","utils/indexDB.js","containers/Main.js","index.js","containers/Template.js"],"names":["data","a","JSZipUtils","getBinaryContent","error","template","createReport","cmdDelimiter","report","saveDataToFile","fileName","mimeType","blob","Blob","type","url","window","URL","createObjectURL","downloadURL","setTimeout","revokeObjectURL","document","createElement","href","download","body","appendChild","style","click","remove","Item","createForm","form","getFieldProps","getFieldError","backgroundColor","rules","required","message","labelNumber","mode","title","initialValue","Date","onClick","validateFields","force","formData","getFieldsValue","detectDate","format","c","position","section","mValue1","mValue2","mValue3","console","log","genReport","Container","children","db","initDB","Promise","resolve","reject","request","indexedDB","open","onupgradeneeded","event","target","result","objectStoreNames","contains","createObjectStore","autoIncrement","onsuccess","onerror","insertData","store","transaction","objectStore","add","id","close","selectAllData","openCursor","cursor","item","key","value","push","continue","prompt","Brief","ReactDOM","render","path","component","Record","history","useState","projects","setProjects","useEffect","then","res","map","project","arrow","projectName","localStorage","setItem","text","onPress","newProjects","getElementById"],"mappings":"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","file":"static/js/main.b9b68d70.chunk.js","sourcesContent":["import createReport from \"docx-templates\";\nimport JSZipUtils from \"jszip-utils\";\n\nexport async function genReport(data) {\n  //上传模版\n  // const template = await readFileIntoArrayBuffer(file);\n  // const report = await createReport({\n  //   template,\n  //   data: {\n  //     name: \"John\",\n  //     surname: \"Appleseed\",\n  //   },\n  //   cmdDelimiter: [\"{\", \"}\"],\n  // });\n  // saveDataToFile(\n  //   report,\n  //   \"report.docx\",\n  //   \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n  // );\n\n  JSZipUtils.getBinaryContent(\n    \"./templates/F-05.docx\",\n    async (error, template) => {\n      if (error) throw error;\n      const report = await createReport({\n        template,\n        // data: {\n        //   projectName: \"测试项目\",\n        //   equipmentName: \"设备\",\n        //   detectDate: \"2021-4-15\",\n        //   reportNo: \"292831930\",\n        //   c: {\n        //     position: \"北\",\n        //     section: [23, 21, 36],\n        //   },\n        // },\n        data,\n        cmdDelimiter: [\"{\", \"}\"],\n      });\n      // Save report\n      saveDataToFile(\n        report,\n        \"report.docx\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n      );\n    }\n  );\n}\n\n// ==============================================\n// Helpers\n// ==============================================\nconst readFileIntoArrayBuffer = async (fd) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = () => {\n      resolve(reader.result);\n    };\n    reader.readAsArrayBuffer(fd);\n  });\n\nconst saveDataToFile = (data, fileName, mimeType) => {\n  const blob = new Blob([data], { type: mimeType });\n  const url = window.URL.createObjectURL(blob);\n  downloadURL(url, fileName, mimeType);\n  setTimeout(() => {\n    window.URL.revokeObjectURL(url);\n  }, 1000);\n};\n\nconst downloadURL = (data, fileName) => {\n  const a = document.createElement(\"a\");\n  a.href = data;\n  a.download = fileName;\n  document.body.appendChild(a);\n  a.style = \"display: none\";\n  a.click();\n  a.remove();\n};\n","// import logo from \"./logo.svg\";\nimport { format } from 'date-fns';\nimport { createForm } from 'rc-form';\nimport {\n  Button,\n  InputItem,\n  List,\n  DatePicker,\n  WingBlank,\n  WhiteSpace,\n} from 'antd-mobile';\nimport { genReport } from '../utils/index';\n\nconst Item = List.Item;\n\nfunction Record({ form }) {\n  //上传模版\n  // const fileInput = useRef(null);\n  // const handleClick = () => {\n  //   const file = fileInput.current.inputRef.inputRef.files[0];\n  //   genReport(file);\n  // };\n  const handleClick = () => {\n    form.validateFields({ force: true }, (error) => {\n      if (!error) {\n        // console.log(form.getFieldsValue());\n        const formData = form.getFieldsValue();\n        formData.detectDate = format(formData.detectDate, 'yyyy-MM-dd');\n        const c = {\n          position: formData.position,\n          section: [formData.mValue1, formData.mValue2, formData.mValue3],\n        };\n        const data = { ...formData, c };\n        console.log(data);\n        genReport(data);\n      } else {\n        // alert('验证失败');\n      }\n    });\n  };\n  const { getFieldProps, getFieldError } = form;\n  return (\n    <WingBlank>\n      <WhiteSpace />\n      <List style={{ backgroundColor: 'red' }}>\n        <InputItem\n          error={!!getFieldError('projectName')}\n          {...getFieldProps('projectName', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          项目名称\n        </InputItem>\n        <InputItem\n          error={!!getFieldError('equipmentName')}\n          labelNumber={7}\n          {...getFieldProps('equipmentName', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          检测设备及名称\n        </InputItem>\n        <DatePicker\n          mode=\"date\"\n          title=\"选择日期\"\n          {...getFieldProps('detectDate', {\n            initialValue: new Date(),\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          <Item error={!!getFieldError('detectDate')}>检测时间</Item>\n        </DatePicker>\n        <InputItem\n          error={!!getFieldError('reportNo')}\n          type=\"number\"\n          {...getFieldProps('reportNo', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          报告编号\n        </InputItem>\n        <InputItem\n          error={!!getFieldError('position')}\n          {...getFieldProps('position', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          柱位置\n        </InputItem>\n        <InputItem\n          error={!!getFieldError('mValue1')}\n          type=\"number\"\n          {...getFieldProps('mValue1', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          实测值1\n        </InputItem>\n        <InputItem\n          error={!!getFieldError('mValue2')}\n          type=\"number\"\n          {...getFieldProps('mValue2', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          实测值2\n        </InputItem>\n        <InputItem\n          error={!!getFieldError('mValue3')}\n          type=\"number\"\n          {...getFieldProps('mValue3', {\n            rules: [{ required: true, message: '必填' }],\n          })}\n        >\n          实测值3\n        </InputItem>\n      </List>\n      <WhiteSpace />\n      <Button type=\"primary\" onClick={handleClick}>\n        导出\n      </Button>\n    </WingBlank>\n  );\n}\n\nexport default createForm()(Record);\n","import React from 'react';\nimport { WingBlank, WhiteSpace } from 'antd-mobile';\n\nexport default function Container({ children }) {\n  return (\n    <WingBlank>\n      <WhiteSpace />\n      {children}\n    </WingBlank>\n  );\n}\n","let db = null;\n\nconst initDB = async () =>\n  await new Promise((resolve, reject) => {\n    const request = window.indexedDB.open(\"ljjDB\");\n    request.onupgradeneeded = function (event) {\n      const db = event.target.result;\n      if (!db.objectStoreNames.contains(\"projects\")) {\n        db.createObjectStore(\"projects\", { autoIncrement: true });\n      }\n    };\n    request.onsuccess = function (event) {\n      db = event.target.result;\n      resolve(db);\n    };\n    request.onerror = function () {\n      reject();\n      console.error(\"数据库初始化失败！\");\n    };\n  });\n\nexport const insertData = async (store, data) => {\n  const db = await initDB();\n  return await new Promise((resolve, reject) => {\n    const request = db\n      .transaction([store], \"readwrite\")\n      .objectStore(store)\n      .add(data);\n    request.onsuccess = function (event) {\n      const id = event.target.result;\n      resolve(id);\n      db.close();\n      //   console.log(`${store}数据添加成功！`);\n    };\n    request.onerror = function () {\n      reject();\n      console.error(`${store}数据添加失败！`);\n    };\n  });\n};\n\nexport const selectAllData = async (store) => {\n  const db = await initDB();\n  return await new Promise((resolve, reject) => {\n    const data = [];\n    const request = db\n      .transaction(store, \"readonly\")\n      .objectStore(store)\n      .openCursor();\n    request.onsuccess = function (event) {\n      const cursor = event.target.result;\n      if (cursor) {\n        const item = { id: cursor.key, ...cursor.value };\n        data.push(item);\n        cursor.continue();\n      } else {\n        resolve(data);\n        db.close();\n      }\n    };\n    request.onerror = function () {\n      reject();\n      console.error(`${store}数据查询失败！`);\n    };\n  });\n};\n","import React, { useState, useEffect } from \"react\";\nimport { List, WhiteSpace, Modal, Button, NavBar } from \"antd-mobile\";\nimport Container from \"../component/Container\";\n// import DBContext from \"../context\";\nimport { insertData, selectAllData } from \"../utils/indexDB\";\n\nconst Item = List.Item;\nconst Brief = Item.Brief;\nconst prompt = Modal.prompt;\n\nexport default function Main({ history }) {\n  // const db = useContext(DBContext);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // console.log(\"1123\");\n    selectAllData(\"projects\").then((res) => {\n      setProjects(res);\n    });\n  }, []);\n  const handleButtonClick = () => {\n    prompt(\n      \"项目名称\",\n      null,\n      [\n        {\n          text: \"取消\",\n        },\n        {\n          text: \"确定\",\n          onPress: (value) => {\n            if (value) {\n              return insertData(\"projects\", { projectName: value }).then(\n                (id) => {\n                  const newProjects = [...projects, { id, projectName: value }];\n                  setProjects(newProjects);\n                }\n              );\n            } else {\n              return Promise.reject();\n            }\n          },\n        },\n      ],\n      \"default\",\n      null,\n      [\"请输入项目名称\"]\n    );\n  };\n\n  const handleItemClick = (projectName) => {\n    localStorage.setItem(\"curProject\", projectName);\n    history.push(\"/template\");\n  };\n\n  return (\n    <>\n      <NavBar mode=\"dark\">项目列表</NavBar>\n      <List>\n        {projects.map((project) => (\n          <Item\n            arrow=\"horizontal\"\n            key={project.id}\n            onClick={() => {\n              handleItemClick(project.projectName);\n            }}\n          >\n            {project.projectName}\n          </Item>\n        ))}\n      </List>\n      <Container>\n        <Button type=\"primary\" onClick={handleButtonClick}>\n          创建新项目\n        </Button>\n      </Container>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Record from \"./containers/Record\";\nimport Template from \"./containers/Template\";\nimport Main from \"./containers/Main\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <Switch>\n      <Route path=\"/template\" component={Template} />\n      <Route path=\"/record\" component={Record} />\n      <Route component={Main} />\n    </Switch>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\n\nexport default function Template() {\n  return <div>选择模版</div>;\n}\n"],"sourceRoot":""}